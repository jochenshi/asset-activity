经过分析,操作和权限可以合并为一个东西,可以称为操作权限。
现在已定义的四种角色，应该有固定的操作权限。具体是哪些，可以在编写每个功能的时候，一个个的统计分析。包括具体有哪些操作权限也可以一个一个的统计。
最后，用户表，角色表，操作权限表之间应该是这种关系
    某用户属于某角色，用户表中保存角色code。
    某角色存在一系列操作权限，角色表中保存了一系列操作权限的code（或value？）。以逗号分隔。
    操作权限表则保存一系列操作和说明。

 更新的表设计会提交到git上。

 在做页面上的权限判断时，以管理员和机器列表为例。
 机器列表存在如下操作权限，[displayMachine,addMachine,deleteMachine]等
 管理员存在如下操作权限，[displayMachine,addMachine,deleteMachine,addPart,addHealth]等
 用机器列表所需权限循环判断是否在管理员权限中存在，存在则生成相应的操作按钮。

 注：展示也是权限，树状菜单的生成也应该依此判断。比如普通用户不会有查看选项的权限（displayOption），则不应该展示此项菜单。

 1.用户的权限已经获取为一个数组[1,2,3,4,5,6,7]。

 2.每一个组件都规定有自己所需权限的数组[1,3,5,7]。

 3.组件被调用时，会传入本次调用所需的权限[3,7]。

 4.取三个数组交集并生产json格式数据，json = {1:false,3:true,5:false,7:true}。这个过程提取为公共方法。

 5.在组件内部所要权限判断的地方自行获取json数据做判断，如if(json[3]){}else{}